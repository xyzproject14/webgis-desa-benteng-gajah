!function(e){if("object"==typeof exports)module.exports=e();else if("function"==typeof define&&define.amd)define(e);else{var f;"undefined"!=typeof window?f=window:"undefined"!=typeof global?f=global:"undefined"!=typeof self&&(f=self),f.turf=e()}}(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(_dereq_,module,exports){module.exports={isClockwise:_dereq_("./lib/isClockwise"),area:_dereq_("./lib/area"),near:_dereq_("./lib/near"),isolines:_dereq_("./lib/isolines"),isobands:_dereq_("./lib/isobands"),merge:_dereq_("./lib/merge"),convex:_dereq_("./lib/convex"),donuts:_dereq_("./lib/donuts"),within:_dereq_("./lib/within"),concave:_dereq_("./lib/concave"),count:_dereq_("./lib/count"),erase:_dereq_("./lib/erase"),variance:_dereq_("./lib/variance"),deviation:_dereq_("./lib/deviation"),median:_dereq_("./lib/median"),min:_dereq_("./lib/min"),max:_dereq_("./lib/max"),aggregate:_dereq_("./lib/aggregate"),flip:_dereq_("./lib/flip"),simplify:_dereq_("./lib/simplify"),sum:_dereq_("./lib/sum"),average:_dereq_("./lib/average"),topo:_dereq_("./lib/topo"),bezier:_dereq_("./lib/bezier"),tag:_dereq_("./lib/tag"),size:_dereq_("./lib/size"),sample:_dereq_("./lib/sample"),jenks:_dereq_("./lib/jenks"),quantile:_dereq_("./lib/quantile"),save:_dereq_("./lib/save"),envelope:_dereq_("./lib/envelope"),square:_dereq_("./lib/square"),midpoint:_dereq_("./lib/midpoint"),buffer:_dereq_("./lib/buffer"),center:_dereq_("./lib/center"),centroid:_dereq_("./lib/centroid"),combine:_dereq_("./lib/combine"),contour:_dereq_("./lib/contour"),distance:_dereq_("./lib/distance"),explode:_dereq_("./lib/explode"),extent:_dereq_("./lib/extent"),bboxPolygon:_dereq_("./lib/bboxPolygon"),featurecollection:_dereq_("./lib/featurecollection"),filter:_dereq_("./lib/filter"),grid:_dereq_("./lib/grid"),inside:_dereq_("./lib/inside"),intersect:_dereq_("./lib/intersect"),linestring:_dereq_("./lib/linestring"),load:_dereq_("./lib/load"),nearest:_dereq_("./lib/nearest"),planepoint:_dereq_("./lib/planepoint"),point:_dereq_("./lib/point"),polygon:_dereq_("./lib/polygon"),quantile:_dereq_("./lib/quantile"),reclass:_dereq_("./lib/reclass"),remove:_dereq_("./lib/remove"),tin:_dereq_("./lib/tin"),union:_dereq_("./lib/union")}},{"./lib/aggregate":2,"./lib/area":3,"./lib/average":4,"./lib/bboxPolygon":5,"./lib/bezier":6,"./lib/buffer":7,"./lib/center":8,"./lib/centroid":9,"./lib/combine":10,"./lib/concave":11,"./lib/contour":12,"./lib/convex":13,"./lib/count":14,"./lib/deviation":15,"./lib/distance":16,"./lib/donuts":17,"./lib/envelope":18,"./lib/erase":19,"./lib/explode":20,"./lib/extent":21,"./lib/featurecollection":22,"./lib/filter":23,"./lib/flip":24,"./lib/grid":25,"./lib/inside":26,"./lib/intersect":27,"./lib/isClockwise":28,"./lib/isobands":29,"./lib/isolines":30,"./lib/jenks":31,"./lib/linestring":32,"./lib/load":33,"./lib/max":34,"./lib/median":35,"./lib/merge":36,"./lib/midpoint":37,"./lib/min":38,"./lib/near":39,"./lib/nearest":40,"./lib/planepoint":41,"./lib/point":42,"./lib/polygon":43,"./lib/quantile":44,"./lib/reclass":45,"./lib/remove":46,"./lib/sample":47,"./lib/save":48,"./lib/simplify":49,"./lib/size":50,"./lib/square":51,"./lib/sum":52,"./lib/tag":53,"./lib/tin":54,"./lib/topo":55,"./lib/union":56,"./lib/variance":57,"./lib/within":58}],2:[function(_dereq_,module,exports){var _=_dereq_("lodash");var t={};t.average=_dereq_("./average");t.sum=_dereq_("./sum");t.median=_dereq_("./median");t.min=_dereq_("./min");t.max=_dereq_("./max");t.deviation=_dereq_("./deviation");t.variance=_dereq_("./variance");t.count=_dereq_("./count");module.exports=function(polygons,points,aggregations,done){_.each(aggregations,function(agg){switch(agg.aggregation){case"average":t.average(polygons,points,agg.inField,agg.outField,function(err,averaged){polygons=averaged});break;case"sum":t.sum(polygons,points,agg.inField,agg.outField,function(err,summed){polygons=summed});break;case"median":t.median(polygons,points,agg.inField,agg.outField,function(err,medianed){polygons=medianed});break;case"min":t.min(polygons,points,agg.inField,agg.outField,function(err,mined){polygons=mined});break;case"max":t.max(polygons,points,agg.inField,agg.outField,function(err,maxed){polygons=maxed});break;case"deviation":t.deviation(polygons,points,agg.inField,agg.outField,function(err,deviated){polygons=deviated});break;case"variance":t.variance(polygons,points,agg.inField,agg.outField,function(err,varianced){polygons=varianced});break;case"count":t.count(polygons,points,agg.outField,function(err,counted){polygons=counted});break;default:done(new Error('"'+agg.aggregation+'" is not a recognized aggregation operation.'))}});done(null,polygons)}},{"./average":4,"./count":14,"./deviation":15,"./max":34,"./median":35,"./min":38,"./sum":52,"./variance":57,lodash:66}],3:[function(_dereq_,module,exports){var _=_dereq_("lodash");module.exports=function(feature,done){}},{lodash:66}],4:[function(_dereq_,module,exports){var t={};var _=_dereq_("lodash"),ss=_dereq_("simple-statistics");t.inside=_dereq_("./inside");module.exports=function(polyFC,ptFC,inField,outField,done){_.each(polyFC.features,function(poly){if(!poly.properties){poly.properties={}}var values=[];_.each(ptFC.features,function(pt){t.inside(pt,poly,function(err,isInside){if(isInside){values.push(pt.properties[inField])}})});poly.properties[outField]=ss.average(values)});done(null,polyFC)}},{"./inside":26,lodash:66,"simple-statistics":68}],5:[function(_dereq_,module,exports){var t={};var point=_dereq_("../lib/point"),polygon=_dereq_("../lib/polygon");t.point=point;t.polygon=polygon;module.exports=function(bbox,done){var lowLeft=t.point(bbox[0],bbox[1]);var topLeft=t.point(bbox[0],bbox[3]);var topRight=t.point(bbox[2],bbox[3]);var lowRight=t.point(bbox[2],bbox[1]);var poly=t.polygon([[lowLeft.geometry.coordinates,lowRight.geometry.coordinates,topRight.geometry.coordinates,topLeft.geometry.coordinates]]);done(null,poly)}},{"../lib/point":42,"../lib/polygon":43}],6:[function(_dereq_,module,exports){var t={};var _=_dereq_("lodash");t.linestring=_dereq_("./linestring");module.exports=function(line,resolution,intensity,done){var lineOut=t.linestring([]);lineOut.properties=line.properties;pts=[];_.each(line.geometry.coordinates,function(pt){pts.push({x:pt[0],y:pt[1]})});var spline=new Spline({points:pts,duration:resolution,sharpness:intensity});for(var i=0;i<spline.duration;i+=10){var pos=spline.pos(i);if(Math.floor(i/100)%2==0)lineOut.geometry.coordinates.push([pos.x,pos.y])}done(null,lineOut)};Spline=function(options){this.points=options.points||[];this.duration=options.duration||1e4;this.sharpness=options.sharpness||.85;this.centers=[];this.controls=[];this.stepLength=options.stepLength||60;this.length=this.points.length;this.delay=0;for(var i=0;i<this.length;i++)this.points[i].z=this.points[i].z||0;for(var i=0;i<this.length-1;i++){var p1=this.points[i];var p2=this.points[i+1];this.centers.push({x:(p1.x+p2.x)/2,y:(p1.y+p2.y)/2,z:(p1.z+p2.z)/2})}this.controls.push([this.points[0],this.points[0]]);for(var i=0;i<this.centers.length-1;i++){var p1=this.centers[i];var p2=this.centers[i+1];var dx=this.points[i+1].x-(this.centers[i].x+this.centers[i+1].x)/2;var dy=this.points[i+1].y-(this.centers[i].y+this.centers[i+1].y)/2;var dz=this.points[i+1].z-(this.centers[i].y+this.centers[i+1].z)/2;this.controls.push([{x:(1-this.sharpness)*this.points[i+1].x+this.sharpness*(this.centers[i].x+dx),y:(1-this.sharpness)*this.points[i+1].y+this.sharpness*(this.centers[i].y+dy),z:(1-this.sharpness)*this.points[i+1].z+this.sharpness*(this.centers[i].z+dz)},{x:(1-this.sharpness)*this.points[i+1].x+this.sharpness*(this.centers[i+1].x+dx),y:(1-this.sharpness)*this.points[i+1].y+this.sharpness*(this.centers[i+1].y+dy),z:(1-this.sharpness)*this.points[i+1].z+this.sharpness*(this.centers[i+1].z+dz)}])}this.controls.push([this.points[this.length-1],this.points[this.length-1]]);this.steps=this.cacheSteps(this.stepLength);return this};Spline.prototype.cacheSteps=function(mindist){var steps=[];var laststep=this.pos(0);steps.push(0);for(var t=0;t<this.duration;t+=10){var step=this.pos(t);var dist=Math.sqrt((step.x-laststep.x)*(step.x-laststep.x)+(step.y-laststep.y)*(step.y-laststep.y)+(step.z-laststep.z)*(step.z-laststep.z));if(dist>mindist){steps.push(t);laststep=step}}return steps};Spline.prototype.vector=function(t){var p1=this.pos(t+10);var p2=this.pos(t-10);return{angle:180*Math.atan2(p1.y-p2.y,p1.x-p2.x)/3.14,speed:Math.sqrt((p2.x-p1.x)*(p2.x-p1.x)+(p2.y-p1.y)*(p2.y-p1.y)+(p2.z-p1.z)*(p2.z-p1.z))}};Spline.prototype.drawControlPoints=function(ctx,color){ctx.fillStyle=color||"#f60";ctx.strokeStyle="#fff";ctx.lineWidth=2;for(var i=0;i<this.length;i++){var p=this.points[i];var c1=this.controls[i][0];var c2=this.controls[i][1];ctx.beginPath();ctx.moveTo(c1.x,c1.y);ctx.lineTo(p.x,p.y);ctx.lineTo(c2.x,c2.y);ctx.stroke();ctx.beginPath();ctx.arc(c1.x,c1.y,3,0,2*Math.PI,false);ctx.fill();ctx.stroke();ctx.beginPath();ctx.arc(c2.x,c2.y,3,0,2*Math.PI,false);ctx.fill();ctx.stroke();ctx.beginPath();ctx.arc(p.x,p.y,7,0,2*Math.PI,false);ctx.fill();ctx.stroke()}return this};Spline.prototype.pos=function(time){function bezier(t,p1,c1,c2,p2){var B=function(t){var t2=t*t,t3=t2*t;return[t3,3*t2*(1-t),3*t*(1-t)*(1-t),(1-t)*(1-t)*(1-t)]};var b=B(t);var pos={x:p2.x*b[0]+c2.x*b[1]+c1.x*b[2]+p1.x*b[3],y:p2.y*b[0]+c2.y*b[1]+c1.y*b[2]+p1.y*b[3],z:p2.z*b[0]+c2.z*b[1]+c1.z*b[2]+p1.z*b[3]};return pos}var t=time-this.delay;if(t<0)t=0;if(t>this.duration)t=this.duration-1;var t2=t/this.duration;if(t2>=1)return this.points[this.length-1];var n=Math.floor((this.points.length-1)*t2);var t1=(this.length-1)*t2-n;return bezier(t1,this.points[n],this.controls[n][1],this.controls[n+1][0],this.points[n+1])};Spline.prototype.draw=function(ctx,color){ctx.strokeStyle=color||"#7e5e38";ctx.lineWidth=14;ctx.beginPath();var pos;for(var i=0;i<this.duration;i+=10){pos=this.pos(i);if(Math.floor(i/100)%2==0)ctx.lineTo(pos.x,pos.y);else ctx.moveTo(pos.x,pos.y)}ctx.stroke();return this}},{"./linestring":32,lodash:66}],7:[function(_dereq_,module,exports){var _=_dereq_("lodash"),jsts=_dereq_("jsts");var t={};t.featurecollection=_dereq_("./featurecollection");t.polygon=_dereq_("./polygon");t.combine=_dereq_("./combine");module.exports=function(feature,radius,units,done){switch(units){case"miles":radius=radius/69.047;break;case"kilometers":radius=radius/111.12;break;case"degrees":break}if(feature.type==="FeatureCollection"){t.combine(feature,function(err,multi){multi.properties={};bufferOp(multi,radius,done)})}else{bufferOp(feature,radius,done)}};var bufferOp=function(feature,radius,done){var reader=new jsts.io.GeoJSONReader;var geom=reader.read(JSON.stringify(feature.geometry));var buffered=geom.buffer(radius);var parser=new jsts.io.GeoJSONParser;buffered=parser.write(buffered);if(buffered.type==="MultiPolygon"){buffered={type:"Feature",geometry:buffered,properties:{}};buffered=t.featurecollection([buffered]);done(null,buffered)}else{buffered=t.featurecollection([t.polygon(buffered.coordinates)]);done(null,buffered)}}},{"./combine":10,"./featurecollection":22,"./polygon":43,jsts:63,lodash:66}],8:[function(_dereq_,module,exports){var t={};var extent=_dereq_("./extent");t.extent=extent;module.exports=function(layer,done){t.extent(layer,function(err,extent){var x=(extent[0]+extent[2])/2;var y=(extent[1]+extent[3])/2;var center={type:"Feature",geometry:{type:"Point",coordinates:[x,y]}};done(center)})}},{"./extent":21}],9:[function(_dereq_,module,exports){var t={};var _=_dereq_("lodash"),ss=_dereq_("simple-statistics");explode=_dereq_("./explode"),point=_dereq_("./point"),t.explode=explode;t.point=point;module.exports=function(features,done){t.explode(features,function(err,vertices){var averageX,averageY,xs=[],ys=[];_.each(vertices.features,function(v){xs.push(v.geometry.coordinates[0]);ys.push(v.geometry.coordinates[1])});averageX=ss.mean(xs);averageY=ss.mean(ys);done(err,t.point(averageX,averageY))})}},{"./explode":20,"./point":42,lodash:66,"simple-statistics":68}],10:[function(_dereq_,module,exports){var _=_dereq_("lodash");module.exports=function(fc,done){var type=fc.features[0].geometry.type;var err;var geometries=_.pluck(fc.features,"geometry");switch(type){case"Point":var multiPoint={type:"Feature",geometry:{type:"MultiPoint",coordinates:[]}};multiPoint.geometry.coordinates=_.pluck(geometries,"coordinates");done(err,multiPoint);break;case"LineString":var multiLineString={type:"Feature",geometry:{type:"MultiLineString",coordinates:[]}};multiLineString.geometry.coordinates=_.pluck(geometries,"coordinates");done(err,multiLineString);break;case"Polygon":var multiPolygon={type:"Feature",geometry:{type:"MultiPolygon",coordinates:[]}};multiPolygon.geometry.coordinates=_.pluck(geometries,"coordinates");done(err,multiPolygon);break}}},{lodash:66}],11:[function(_dereq_,module,exports){var async=_dereq_("async");var t={};t.tin=_dereq_("./tin");t.merge=_dereq_("./merge");t.buffer=_dereq_("./buffer");t.distance=_dereq_("./distance");t.point=_dereq_("./point");module.exports=function(points,maxEdge,done){t.tin(points,null,function(err,tinPolys){if(err)done(err);filterTriangles(tinPolys.features,maxEdge,function(filteredPolys){tinPolys.features=filteredPolys;t.buffer(tinPolys,1,"miles",function(err,bufferPolys){if(err)done(err);t.merge(bufferPolys,function(err,mergePolys){if(err)done(err);done(null,mergePolys)})})})})};var filterTriangles=function(triangles,maxEdge,cb){filteredTriangles=[];async.each(triangles,function(triangle,asyncCB){var pt1=t.point(triangle.geometry.coordinates[0][0][0],triangle.geometry.coordinates[0][0][1]);var pt2=t.point(triangle.geometry.coordinates[0][1][0],triangle.geometry.coordinates[0][1][1]);var pt3=t.point(triangle.geometry.coordinates[0][2][0],triangle.geometry.coordinates[0][2][1]);t.distance(pt1,pt2,"miles",function(err,dist1){t.distance(pt2,pt3,"miles",function(err,dist2){t.distance(pt1,pt3,"miles",function(err,dist3){if(dist1<=maxEdge&&dist2<=maxEdge&&dist3<=maxEdge){filteredTriangles.push(triangle)}asyncCB()})})})},function(err){cb(filteredTriangles)})}},{"./buffer":7,"./distance":16,"./merge":36,"./point":42,"./tin":54,async:59}],12:[function(_dereq_,module,exports){var _=_dereq_("lodash"),async=_dereq_("async");var t={};t.tin=_dereq_("./tin");t.inside=_dereq_("./inside");t.grid=_dereq_("./grid");t.extent=_dereq_("./extent");t.planepoint=_dereq_("./planepoint");t.featurecollection=_dereq_("./featurecollection");t.polygon=_dereq_("./polygon");t.square=_dereq_("./square");t.donuts=_dereq_("./donuts");t.merge=_dereq_("./merge");module.exports=function(points,z,resolution,breaks,donuts,done){t.tin(points,z,function(err,tinResult){t.extent(points,function(err,bbox){t.square(bbox,function(err,bbox){t.grid(bbox,resolution,function(err,gridResult){var data=[];_(gridResult.features).each(function(pt){_(tinResult.features).each(function(triangle){t.inside(pt,triangle,function(err,isInside){if(isInside){t.planepoint(pt,triangle,function(err,zValue){pt.properties={};pt.properties[z]=zValue})}else{}})})});var depth=Math.sqrt(gridResult.features.length);for(var x=0;x<depth;x++){var xGroup=gridResult.features.slice(x*depth,(x+1)*depth);var xFlat=[];_.each(xGroup,function(verticalPoint){if(verticalPoint.properties){xFlat.push(verticalPoint.properties[z])}else{xFlat.push(0)}});data.push(xFlat)}var interval=(bbox[2]-bbox[0])/depth;var xCoordinates=[];var yCoordinates=[];for(var x=0;x<depth;x++){xCoordinates.push(x*interval+bbox[0]);yCoordinates.push(x*interval+bbox[1])}var c=new Conrec;c.contour(data,0,resolution,0,resolution,xCoordinates,yCoordinates,breaks.length,breaks);var contourList=c.contourList();var fc=t.featurecollection([]);_.each(contourList,function(c){if(c.length>2){var polyCoordinates=[];_.each(c,function(coord){polyCoordinates.push([coord.x,coord.y])});var poly=t.polygon([polyCoordinates]);poly.properties={};poly.properties[z]=c.level;fc.features.push(poly)}});if(donuts){t.donuts(fc,function(err,donutPolys){var zGroups=[];_.each(donutPolys.features,function(ring){var found=false;_.each(zGroups,function(group){if(group.z===ring.properties[z]){found=true;group.rings.push(ring)}});if(!found){zGroups.push({z:ring.properties[z],rings:[ring]})}});donutPolys.features=[];_.each(zGroups,function(group){t.merge(t.featurecollection(group.rings),function(err,multiRing){donutPolys.features.push(multiRing)})});done(null,donutPolys)})}else{done(null,fc)}})})})})};exports.Conrec=Conrec;var EPSILON=1e-10;function pointsEqual(a,b){var x=a.x-b.x,y=a.y-b.y;return x*x+y*y<EPSILON}function reverseList(list){var pp=list.head;while(pp){var temp=pp.next;pp.next=pp.prev;pp.prev=temp;pp=temp}var temp=list.head;list.head=list.tail;list.tail=temp}function ContourBuilder(level){this.level=level;this.s=null;this.count=0}ContourBuilder.prototype.remove_seq=function(list){if(list.prev){list.prev.next=list.next}else{this.s=list.next}if(list.next){list.next.prev=list.prev}--this.count};ContourBuilder.prototype.addSegment=function(a,b){var ss=this.s;var ma=null;var mb=null;var prependA=false;var prependB=false;while(ss){if(ma==null){if(pointsEqual(a,ss.head.p)){ma=ss;prependA=true}else if(pointsEqual(a,ss.tail.p)){ma=ss}}if(mb==null){if(pointsEqual(b,ss.head.p)){mb=ss;prependB=true}else if(pointsEqual(b,ss.tail.p)){mb=ss}}if(mb!=null&&ma!=null){break}else{ss=ss.next}}var c=(ma!=null?1:0)|(mb!=null?2:0);switch(c){case 0:var aa={p:a,prev:null};var bb={p:b,next:null};aa.next=bb;bb.prev=aa;ma={head:aa,tail:bb,next:this.s,prev:null,closed:false};if(this.s){this.s.prev=ma}this.s=ma;++this.count;break;case 1:var pp={p:b};if(prependA){pp.next=ma.head;pp.prev=null;ma.head.prev=pp;ma.head=pp}else{pp.next=null;pp.prev=ma.tail;ma.tail.next=pp;ma.tail=pp}break;case 2:var pp={p:a};if(prependB){pp.next=mb.head;pp.prev=null;mb.head.prev=pp;mb.head=pp}else{pp.next=null;pp.prev=mb.tail;mb.tail.next=pp;mb.tail=pp}break;case 3:if(ma===mb){var pp={p:ma.tail.p,next:ma.head,prev:null};ma.head.prev=pp;ma.head=pp;ma.closed=true;break}switch((prependA?1:0)|(prependB?2:0)){case 0:reverseList(ma);case 1:mb.tail.next=ma.head;ma.head.prev=mb.tail;mb.tail=ma.tail;this.remove_seq(ma);break;case 3:reverseList(ma);case 2:ma.tail.next=mb.head;mb.head.prev=ma.tail;ma.tail=mb.tail;this.remove_seq(mb);break}}};function Conrec(drawContour){if(!drawContour){var c=this;c.contours={};this.drawContour=function(startX,startY,endX,endY,contourLevel,k){var cb=c.contours[k];if(!cb){cb=c.contours[k]=new ContourBuilder(contourLevel)}cb.addSegment({x:startX,y:startY},{x:endX,y:endY})};this.contourList=function(){var l=[];var a=c.contours;for(var k in a){var s=a[k].s;var level=a[k].level;while(s){var h=s.head;var l2=[];l2.level=level;l2.k=k;while(h&&h.p){l2.push(h.p);h=h.next}l.push(l2);s=s.next}}l.sort(function(a,b){return a.k-b.k});return l}}else{this.drawContour=drawContour}this.h=new Array(5);this.sh=new Array(5);this.xh=new Array(5);this.yh=new Array(5)}Conrec.prototype.contour=function(d,ilb,iub,jlb,jub,x,y,nc,z){var h=this.h,sh=this.sh,xh=this.xh,yh=this.yh;var drawContour=this.drawContour;this.contours={};var xsect=function(p1,p2){return(h[p2]*xh[p1]-h[p1]*xh[p2])/(h[p2]-h[p1])};var ysect=function(p1,p2){return(h[p2]*yh[p1]-h[p1]*yh[p2])/(h[p2]-h[p1])};var m1;var m2;var m3;var case_value;var dmin;var dmax;var x1=0;var x2=0;var y1=0;var y2=0;var im=[0,1,1,0];var jm=[0,0,1,1];var castab=[[[0,0,8],[0,2,5],[7,6,9]],[[0,3,4],[1,3,1],[4,3,0]],[[9,6,7],[5,2,0],[8,0,0]]];for(var j=jub-1;j>=jlb;j--){for(var i=ilb;i<=iub-1;i++){var temp1,temp2;temp1=Math.min(d[i][j],d[i][j+1]);temp2=Math.min(d[i+1][j],d[i+1][j+1]);dmin=Math.min(temp1,temp2);temp1=Math.max(d[i][j],d[i][j+1]);temp2=Math.max(d[i+1][j],d[i+1][j+1]);dmax=Math.max(temp1,temp2);if(dmax>=z[0]&&dmin<=z[nc-1]){for(var k=0;k<nc;k++){if(z[k]>=dmin&&z[k]<=dmax){for(var m=4;m>=0;m--){if(m>0){h[m]=d[i+im[m-1]][j+jm[m-1]]-z[k];xh[m]=x[i+im[m-1]];yh[m]=y[j+jm[m-1]]}else{h[0]=.25*(h[1]+h[2]+h[3]+h[4]);xh[0]=.5*(x[i]+x[i+1]);yh[0]=.5*(y[j]+y[j+1])}if(h[m]>EPSILON){sh[m]=1}else if(h[m]<-EPSILON){sh[m]=-1}else sh[m]=0}for(m=1;m<=4;m++){m1=m;m2=0;if(m!=4){m3=m+1}else{m3=1}case_value=castab[sh[m1]+1][sh[m2]+1][sh[m3]+1];if(case_value!=0){switch(case_value){case 1:x1=xh[m1];y1=yh[m1];x2=xh[m2];y2=yh[m2];break;case 2:x1=xh[m2];y1=yh[m2];x2=xh[m3];y2=yh[m3];break;case 3:x1=xh[m3];y1=yh[m3];x2=xh[m1];y2=yh[m1];break;case 4:x1=xh[m1];y1=yh[m1];x2=xsect(m2,m3);y2=ysect(m2,m3);break;case 5:x1=xh[m2];y1=yh[m2];x2=xsect(m3,m1);y2=ysect(m3,m1);break;case 6:x1=xh[m3];y1=yh[m3];x2=xsect(m1,m2);y2=ysect(m1,m2);break;case 7:x1=xsect(m1,m2);y1=ysect(m1,m2);x2=xsect(m2,m3);y2=ysect(m2,m3);break;case 8:x1=xsect(m2,m3);y1=ysect(m2,m3);x2=xsect(m3,m1);y2=ysect(m3,m1);break;case 9:x1=xsect(m3,m1);y1=ysect(m3,m1);x2=xsect(m1,m2);y2=ysect(m1,m2);break;default:break}drawContour(x1,y1,x2,y2,z[k],k)}}}}}}}}},{"./donuts":17,"./extent":21,"./featurecollection":22,"./grid":25,"./inside":26,"./merge":36,"./planepoint":41,"./polygon":43,"./square":51,"./tin":54,async:59,lodash:66}],13:[function(_dereq_,module,exports){var t={};t.tin=_dereq_("./tin");t.merge=_dereq_("./merge");t.buffer=_dereq_("./buffer");module.exports=function(points,done){t.tin(points,null,function(err,tinPolys){if(err)done(err);t.buffer(tinPolys,.05,"miles",function(err,bufferPolys){t.merge(bufferPolys,function(err,mergePolys){if(err)done(err);done(null,mergePolys)})})})}},{"./buffer":7,"./merge":36,"./tin":54}],14:[function(_dereq_,module,exports){var t={};var _=_dereq_("lodash");t.inside=_dereq_("./inside");module.exports=function(polyFC,ptFC,outField,done){_.each(polyFC.features,function(poly){if(!poly.properties){poly.properties={}}var values=[];_.each(ptFC.features,function(pt){t.inside(pt,poly,function(err,isInside){if(isInside){values.push(1)}})});poly.properties[outField]=values.length});done(null,polyFC)}},{"./inside":26,lodash:66}],15:[function(_dereq_,module,exports){var t={};var _=_dereq_("lodash"),ss=_dereq_("simple-statistics");t.inside=_dereq_("./inside");module.exports=function(polyFC,ptFC,inField,outField,done){_.each(polyFC.features,function(poly){if(!poly.properties){poly.properties={}}var values=[];_.each(ptFC.features,function(pt){t.inside(pt,poly,function(err,isInside){if(isInside){values.push(pt.properties[inField])}})});poly.properties[outField]=ss.standard_deviation(values)});done(null,polyFC)}},{"./inside":26,lodash:66,"simple-statistics":68}],16:[function(_dereq_,module,exports){module.exports=function(point1,point2,units,done){var toRad=function(degree){return degree*Math.PI/180};var coordinates1=point1.geometry.coordinates;var coordinates2=point2.geometry.coordinates;var dLat=toRad(coordinates2[0]-coordinates1[0]);var dLon=toRad(coordinates2[1]-coordinates1[1]);var lat1=toRad(coordinates1[1]);var lat2=toRad(coordinates2[1]);var a=Math.sin(dLat/2)*Math.sin(dLat/2)+Math.sin(dLon/2)*Math.sin(dLon/2)*Math.cos(lat1)*Math.cos(lat2);var c=2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a));var R=0;switch(units){case"miles":R=3960;break;case"kilometers":R=6373;break;case"degrees":R=57.2957795;break;case"radians":R=1;break}var distance=R*c;done(null,distance)}},{}],17:[function(_dereq_,module,exports){var _=_dereq_("lodash"),extractor=_dereq_("poly-extractor");var t={};t.featurecollection=_dereq_("./featurecollection");t.erase=_dereq_("./erase");t.point=_dereq_("./point");t.inside=_dereq_("./inside");t.union=_dereq_("./union");module.exports=function(polyFC,done){polyFC;donuts=t.featurecollection([]);_.each(polyFC.features,function(poly1){_.each(polyFC.features,function(poly2){contained(poly1,poly2,function(isContained){if(!_.isEqual(poly1,poly2)&&isContained){if(!_.isEqual(poly1.properties,poly2.properties)){t.erase(poly1,poly2,function(err,erased){var duplicate=_.some(donuts.features,erased);if(!duplicate&&erased.geometry.type!="GeometryCollection"){donuts.features.push(erased)}else if(erased.geometry.type=="GeometryCollection"){}})}}else if(!_.isEqual(poly1,poly2)){var duplicate=_.some(donuts.features,poly1);if(!duplicate){donuts.features.push(poly1)}else{}}})})});done(null,donuts)};function contained(poly1,poly2,done){var sampleVertex=t.point(poly2.geometry.coordinates[0][0][0],poly2.geometry.coordinates[0][0][1]);t.inside(sampleVertex,poly1,function(err,isInside){done(isInside)})}},{"./erase":19,"./featurecollection":22,"./inside":26,"./point":42,"./union":56,lodash:66,"poly-extractor":67}],18:[function(_dereq_,module,exports){var t={};var extent=_dereq_("./extent"),bboxPolygon=_dereq_("./bboxPolygon");t.bboxPolygon=bboxPolygon;t.extent=extent;module.exports=function(features,done){t.extent(features,function(err,bbox){t.bboxPolygon(bbox,function(err,poly){done(err,poly)})})}},{"./bboxPolygon":5,"./extent":21}],19:[function(_dereq_,module,exports){var jsts=_dereq_("jsts"),_=_dereq_("lodash");var t={};t.featurecollection=_dereq_("./featurecollection");module.exports=function(poly1,poly2,done){poly1=correctRings(poly1);poly2=correctRings(poly2);var reader=new jsts.io.GeoJSONReader;var a=reader.read(JSON.stringify(poly1.geometry));var b=reader.read(JSON.stringify(poly2.geometry));var erased=a.difference(b);var parser=new jsts.io.GeoJSONParser;erased=parser.write(erased);poly1.geometry=erased;done(null,poly1)};function correctRings(poly){_.each(poly.geometry.coordinates,function(ring){var isWrapped=_.isEqual(ring[0],ring.slice(-1)[0]);if(!isWrapped){ring.push(ring[0])}});return poly}},{"./featurecollection":22,jsts:63,lodash:66}],20:[function(_dereq_,module,exports){var t={};var _=_dereq_("lodash"),featurecollection=_dereq_("./featurecollection"),point=_dereq_("./point");t.featurecollection=featurecollection;t.point=point;module.exports=function(features,done){var coordinates=[];if(features.type==="FeatureCollection"){for(var i in features.features){switch(features.features[i].geometry.type){case"Point":coordinates.push([features.features[i].geometry.coordinates]);break;case"LineString":coordinates.push(features.features[i].geometry.coordinates);break;case"Polygon":coordinates.push(features.features[i].geometry.coordinates);coordinates.push(_.flatten(coordinates,true));break;case"MultiPoint":coordinates.push(features.features[i].geometry.coordinates);break;case"MultiLineString":coordinates.push(features.features[i].geometry.coordinates);coordinates.push(_.flatten(coordinates,true));break;case"MultiPolygon":coordinates.push(features.features[i].geometry.coordinates);coordinates.push(_.flatten(coordinates,true));coordinates.push(_.flatten(coordinates,true));break}if(!features.features[i].geometry&&features.features[i].properties){throw new Error("Unknown Geometry Type")}}coordinates=_.flatten(coordinates,true)}else{var geometry;if(features.type==="Feature"){geometry=features.geometry}else{geometry=features}switch(geometry.type){case"Point":coordinates=[geometry.coordinates];break;case"LineString":coordinates=geometry.coordinates;break;case"Polygon":coordinates=geometry.coordinates;coordinates=_.flatten(coordinates,true);break;case"MultiPoint":coordinates=geometry.coordinates;break;case"MultiLineString":coordinates=geometry.coordinates;coordinates=_.flatten(coordinates,true);break;case"MultiPolygon":coordinates=geometry.coordinates;coordinates=_.flatten(coordinates,true);coordinates=_.flatten(coordinates,true);break}if(!geometry){throw new Error("No Geometry Found")}}var fc=t.featurecollection([]);_.each(coordinates,function(c){fc.features.push(t.point(c[0],c[1]))});done(null,fc)}},{"./featurecollection":22,"./point":42,lodash:66}],21:[function(_dereq_,module,exports){_=_dereq_("lodash");module.exports=function(layer,done){var xmin=Infinity,ymin=Infinity,xmax=-Infinity,ymax=-Infinity;if(layer.type==="FeatureCollection"){for(var i in layer.features){var coordinates;switch(layer.features[i].geometry.type){case"Point":coordinates=[layer.features[i].geometry.coordinates];break;case"LineString":coordinates=layer.features[i].geometry.coordinates;break;case"Polygon":coordinates=layer.features[i].geometry.coordinates;coordinates=_.flatten(coordinates,true);break;case"MultiPoint":coordinates=layer.features[i].geometry.coordinates;break;case"MultiLineString":coordinates=layer.features[i].geometry.coordinates;coordinates=_.flatten(coordinates,true);break;case"MultiPolygon":coordinates=layer.features[i].geometry.coordinates;coordinates=_.flatten(coordinates,true);coordinates=_.flatten(coordinates,true);break}if(!layer.features[i].geometry&&layer.features[i].properties){throw new Error("Unknown Geometry Type")}for(var n in coordinates){if(xmin>coordinates[n][0]){xmin=coordinates[n][0]}if(ymin>coordinates[n][1]){ymin=coordinates[n][1]}if(xmax<coordinates[n][0]){xmax=coordinates[n][0]}if(ymax<coordinates[n][1]){ymax=coordinates[n][1]}}}var bbox=[xmin,ymin,xmax,ymax];done(null,bbox)}else{var coordinates;var geometry;if(layer.type==="Feature"){geometry=layer.geometry}else{geometry=layer}switch(geometry.type){case"Point":coordinates=[geometry.coordinates];break;case"LineString":coordinates=geometry.coordinates;break;case"Polygon":coordinates=geometry.coordinates;coordinates=_.flatten(coordinates,true);break;case"MultiPoint":coordinates=geometry.coordinates;break;case"MultiLineString":coordinates=geometry.coordinates;coordinates=_.flatten(coordinates,true);break;case"MultiPolygon":coordinates=geometry.coordinates;coordinates=_.flatten(coordinates,true);coordinates=_.flatten(coordinates,true);break}if(!geometry){throw new Error("No Geometry Found")}for(var n in coordinates){if(xmin>coordinates[n][0]){xmin=coordinates[n][0]}if(ymin>coordinates[n][1]){ymin=coordinates[n][1]}if(xmax<coordinates[n][0]){xmax=coordinates[n][0]}if(ymax<coordinates[n][1]){ymax=coordinates[n][1]}}var bbox=[xmin,ymin,xmax,ymax];done(null,bbox)}}},{lodash:66}],22:[function(_dereq_,module,exports){module.exports=function(features){var fc={type:"FeatureCollection",features:features};return fc}},{}],23:[function(_dereq_,module,exports){var _=_dereq_("lodash");var t={};t.featurecollection=_dereq_("./featurecollection");module.exports=function(fc,field,value,done){var newFC=t.featurecollection([]);for(var i=0;i<fc.features.length;i++){if(fc.features[i].properties[field]===value){newFC.features.push(fc.features[i])}}done(null,newFC)}},{"./featurecollection":22,lodash:66}],24:[function(_dereq_,module,exports){var t={};t.featurecollection=_dereq_("./featurecollection");module.exports=function(fc,done){if(fc.type==="Feature"){switch(fc.geometry.type){case"Point":fc.geometry.coordinates=flipCoordinate(fc.geometry.coordinates);done(null,fc);break;case"LineString":_.each(fc.geometry.coordinates,function(coordinates,i){coordinates=flipCoordinate(coordinates);fc.geometry.coordinates[i]=coordinates});done(null,fc);break;case"Polygon":_.each(fc.geometry.coordinates,function(ring,i){_.each(ring,function(coordinates,k){coordinates=flipCoordinate(coordinates);fc.geometry.coordinates[i][k]=coordinates})});done(null,fc);break}}else if(fc.type==="FeatureCollection"){_.each(fc.features,function(feature){switch(feature.geometry.type){case"Point":feature.geometry.coordinates=flipCoordinate(feature.geometry.coordinates);break;case"LineString":_.each(feature.geometry.coordinates,function(coordinates,i){coordinates=flipCoordinate(coordinates);feature.geometry.coordinates[i]=coordinates});break;case"Polygon":_.each(feature.geometry.coordinates,function(ring,i){_.each(ring,function(coordinates,k){coordinates=flipCoordinate(coordinates);feature.geometry.coordinates[i][k]=coordinates})});break}});done(null,fc)}else{done(new Error("Unknown geometry type"),null)}};var flipCoordinate=function(coordinates){x=coordinates[0];y=coordinates[1];return[y,x]}},{"./featurecollection":22}],25:[function(_dereq_,module,exports){var t={};var _=_dereq_("lodash"),point=_dereq_("./point");
